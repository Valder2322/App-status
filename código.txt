package com.vsp;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.graphics.drawable.GradientDrawable;
import android.os.Bundle;
import android.view.Gravity;
import android.view.Window;
import android.view.WindowManager;
import android.view.View;
import android.webkit.CookieManager;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.Button;

public class WebActivity extends Activity {
    private WebView webView;
    private FrameLayout frameContainer;
    private LupaHelper lupaHelper;

    private static final String PREFS_NAME = "HistoricoPrefs";
    private static final String KEY_HISTORICO = "Historico";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // Tela cheia sem t√≠tulo
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                             WindowManager.LayoutParams.FLAG_FULLSCREEN);

        super.onCreate(savedInstanceState);
        setContentView(R.layout.web_activity);

        frameContainer = (FrameLayout) findViewById(R.id.frame_container);
        webView = (WebView) findViewById(R.id.webView);

        lupaHelper = new LupaHelper(this, frameContainer, webView);
        lupaHelper.show();

        LoadingHelper loadingHelper = new LoadingHelper(this);
        loadingHelper.show();

        webView.setWebViewClient(new WebViewClient() {
				@Override
				public boolean shouldOverrideUrlLoading(WebView view, String url) {
					if (url.startsWith("intent://")) {
						return true;
					}

					// Detecta se a URL √© de cap√≠tulo e salva no hist√≥rico
					if (isChapterUrl(url)) {
						String[] info = extractMangaInfo(url);
						if (info != null && info.length == 2) {
							// Agora repassa tamb√©m a URL para salvamento
							salvarNoHistorico(info[0], info[1], url);
						}
					}

					view.loadUrl(url);
					return false;
				}
			});

        WebSettings webSettings = webView.getSettings();
        webSettings.setJavaScriptEnabled(true);
        webSettings.setDomStorageEnabled(true);
        webSettings.setBuiltInZoomControls(true);
        webSettings.setDisplayZoomControls(false);
        webSettings.setLoadWithOverviewMode(true);
        webSettings.setUseWideViewPort(true);

        String userAgent = "Mozilla/5.0 (Linux; Android 10; Pixel 3 XL) " +
			"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Mobile Safari/537.36";
        webSettings.setUserAgentString(userAgent);

        CookieManager cookieManager = CookieManager.getInstance();
        cookieManager.setAcceptCookie(true);
        // Se necess√°rio, condicione para APIs inferiores a Lollipop.
        cookieManager.setAcceptThirdPartyCookies(webView, true);

        String url = getIntent().getStringExtra("url");
        if (url != null) {
            webView.loadUrl(url);
        }
    }

    // Verifica se a URL √© um cap√≠tulo de mang√° de algum site conhecido
    private boolean isChapterUrl(String url) {
        return (url.contains("flowermanga.net/manga/") && url.contains("/capitulo-"))
            || (url.contains("mangalivre.tv/manga/") && url.contains("/capitulo-"))
            || (url.contains("seitacelestial.com/") && url.contains("chapter-"))
            || (url.contains("mangaonline.blog/manga/") && url.contains("/capitulo-"))
            || (url.contains("lermangas.me/manga/") && url.contains("/capitulo-"))
            || (url.contains("leituramanga.com/manga/") && url.contains("/chapter/"))
            || (url.contains("yomucomics.com/streaming-") && url.contains("-capitulo-"));
    }

    // Extrai nome do mang√° e n√∫mero do cap√≠tulo da URL, retorna {nome, cap√≠tulo}
    private String[] extractMangaInfo(String url) {
        try {
            String manga = "";
            String chapter = "";

            if (url.contains("flowermanga.net/manga/")) {
                // Ex: https://flowermanga.net/manga/eu-nao-salvei-voce-para-ser-pedida-em-casamento/capitulo-0/
                manga = extrairEntre(url, "/manga/", "/capitulo-");
                chapter = extrairDepois(url, "/capitulo-");
            } else if (url.contains("mangalivre.tv/manga/")) {
                manga = extrairEntre(url, "/manga/", "/capitulo-");
                chapter = extrairDepois(url, "/capitulo-");
            } else if (url.contains("seitacelestial.com/")) {
                // Ex: https://seitacelestial.com/o-assassino-reencarnado-e-um-genio-espadachim-chapter-45/
                manga = extrairAntes(url, "-chapter-");
                chapter = extrairDepois(url, "-chapter-");
            } else if (url.contains("mangaonline.blog/manga/")) {
                manga = extrairEntre(url, "/manga/", "/capitulo-");
                chapter = extrairDepois(url, "/capitulo-");
            } else if (url.contains("lermangas.me/manga/")) {
                manga = extrairEntre(url, "/manga/", "/capitulo-");
                if (manga.isEmpty()) {
                    // Se n√£o encontrar, tenta a parte antes da pr√≥xima barra
                    manga = extrairEntre(url, "/manga/", "/");
                }
                chapter = extrairDepois(url, "/capitulo-");
                if (chapter.isEmpty()) {
                    chapter = extrairDepois(url, "/capitulo-");
                }
            } else if (url.contains("leituramanga.com/manga/")) {
                manga = extrairEntre(url, "/manga/", "/chapter/");
                chapter = extrairDepois(url, "/chapter/");
            } else if (url.contains("yomucomics.com/streaming-")) {
                // Ex: https://yomucomics.com/streaming-do-arqueiro-genial-capitulo-06/
                manga = extrairEntre(url, "streaming-", "-capitulo-");
                chapter = extrairDepois(url, "-capitulo-");
            }

            // Ajustes finais: troca h√≠fens por espa√ßos no nome do mang√°
            manga = manga.replace("-", " ").trim();
            // Remove caracteres n√£o num√©ricos do cap√≠tulo (ex: "06/" vira "06")
            chapter = chapter.replaceAll("[^0-9]", "").trim();

            if (!manga.isEmpty() && !chapter.isEmpty()) {
                return new String[]{manga, chapter};
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    // Salva no hist√≥rico usando SharedPreferences (formato: "Continuar lendo: [Manga] Cap√≠tulo [Cap√≠tulo]@@[URL]")
    private void salvarNoHistorico(String manga, String capitulo, String url) {
        SharedPreferences prefs = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
        String historicoAtual = prefs.getString(KEY_HISTORICO, "");

        String novaEntrada = "Continuar lendo: " + manga + " Cap√≠tulo " + capitulo + "@@" + url;

        // Evita duplicar a entrada se j√° estiver presente
        if (!historicoAtual.contains(novaEntrada)) {
            String novoHistorico = historicoAtual.isEmpty() ? novaEntrada : historicoAtual + ";;;" + novaEntrada;
            prefs.edit().putString(KEY_HISTORICO, novoHistorico).apply();
        }
    }

    // Extrai texto entre dois delimitadores
    private String extrairEntre(String texto, String start, String end) {
        int iStart = texto.indexOf(start);
        if (iStart < 0) return "";
        iStart += start.length();
        int iEnd = texto.indexOf(end, iStart);
        if (iEnd < 0) return "";
        return texto.substring(iStart, iEnd);
    }

    // Extrai texto depois de um delimitador at√© a pr√≥xima barra ou fim de texto
    private String extrairDepois(String texto, String start) {
        int iStart = texto.indexOf(start);
        if (iStart < 0) return "";
        iStart += start.length();
        int iEnd = texto.indexOf("/", iStart);
        if (iEnd < 0) iEnd = texto.length();
        return texto.substring(iStart, iEnd);
    }

    // Extrai texto antes de um delimitador a partir do dom√≠nio
    private String extrairAntes(String texto, String end) {
        int iEnd = texto.indexOf(end);
        if (iEnd < 0) return "";
        int iStart = texto.lastIndexOf("/", iEnd);
        if (iStart < 0) iStart = 0;
        else iStart += 1;
        return texto.substring(iStart, iEnd);
    }

    @Override
    public void onBackPressed() {
        AlertDialog.Builder builder = new AlertDialog.Builder(WebActivity.this);
        builder.setMessage("Deseja sair da leitura üìñ ???");

        LinearLayout buttonLayout = new LinearLayout(this);
        buttonLayout.setOrientation(LinearLayout.HORIZONTAL);
        buttonLayout.setGravity(Gravity.CENTER);
        buttonLayout.setPadding(40, 20, 40, 20);

        Button btnSim = new Button(this);
        btnSim.setText("Sim");
        btnSim.setTextColor(Color.BLUE);
        btnSim.setBackgroundColor(Color.WHITE);
        btnSim.setPadding(40, 20, 40, 20);
        btnSim.setLayoutParams(new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT, 1));
        btnSim.setOnClickListener(new View.OnClickListener() {
				public void onClick(View v) {
					finish();
				}
			});

        Button btnNao = new Button(this);
        btnNao.setText("N√£o");
        btnNao.setTextColor(Color.BLUE);
        btnNao.setBackgroundColor(Color.WHITE);
        btnNao.setPadding(40, 20, 40, 20);
        btnNao.setLayoutParams(new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT, 1));
        btnNao.setOnClickListener(new View.OnClickListener() {
				public void onClick(View v) {
					AlertDialog dialog = (AlertDialog) v.getTag();
					dialog.dismiss();
				}
			});

        buttonLayout.addView(btnSim);
        buttonLayout.addView(btnNao);

        builder.setView(buttonLayout);
        AlertDialog dialog = builder.create();
        dialog.show();

        // Define o fundo branco com borda azul para o di√°logo
        GradientDrawable gd = new GradientDrawable();
        gd.setColor(Color.WHITE);
        gd.setStroke(2, Color.BLUE);
        dialog.getWindow().setBackgroundDrawable(gd);

        btnNao.setTag(dialog);
    }
}